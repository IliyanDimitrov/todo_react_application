{"version":3,"sources":["NavBar/NavBar.js","Footer/Footer.js","ButtonItem/ButtonItem.js","TaskItem/TaskItem.js","InputField/InputField.js","RemainingTasks/RemainingTasks.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","href","src","width","height","alt","type","data-toggle","data-target","id","MainSection","ButtonItem","props","onClick","handleClick","aria-pressed","autoComplete","text","TaskItem","completed","due_date","completeTask","deleteTask","InputField","useState","setText","setDueDate","placeholder","aria-label","aria-describedby","onChange","event","target","value","addTask","RemainingTasks","count","App","tasks","setTasks","useEffect","axios","get","then","response","console","log","data","catch","error","activeTasks","filter","task","completedTasks","timeDifference","currentDate","taskTimeFrame","Math","ceil","delete","updatedTaskList","task_id","updateTask","find","put","map","newTask","post","updatedTasks","clearInputFields","length","key","description","Date","now","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7191f8e4.chunk.js","sourcesContent":["import React from 'react';\n\nimport './NavBar.css';\n\nfunction NavBar() {\n    return (\n        <header>\n            <nav className=\"navbar navbar-expand-md navbar-light bg-light mb-3\">\n                <div className=\"container-fluid\">\n                    <a href=\"#top\" className=\"navbar-brand mr-3\">\n                        <img src=\"\" width=\"30\" height=\"30\"\n                            className=\"d-inline-block align-top\" alt=\"\" />\n                    Todo Application\n                </a>\n                    <button type=\"button\" className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n                        <div className=\"navbar-nav\">\n                            <a href=\"#top\" className=\"nav-item nav-link active\">Pending</a>\n                            <a href=\"#top\" className=\"nav-item nav-link\">Completed</a>\n                        </div>\n                        <div className=\"navbar-nav ml-auto\">\n                            <a href=\"#top\" className=\"nav-item nav-link\">Register</a>\n                            <a href=\"#top\" className=\"nav-item nav-link\">Login</a>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        </header>\n    );\n}\n\nexport default NavBar;\n","import React from 'react';\n\nimport './Footer.css';\n\nfunction MainSection() {\n    return (\n        \n            <footer>\n            <div className=\"row\">\n                <div className=\"col-md-6\">\n                    <p>Copyright &copy; 2020 ID</p>\n                </div>\n                <div className=\"col-md-6 text-md-right\">\n                    <a href=\"foo\" className=\"text-dark\">Terms of Use</a>\n                    <span className=\"text-muted mx-2\">|</span>\n                    <a href=\"foo\" className=\"text-dark\">Privacy Policy</a>\n                </div>\n            </div>\n        </footer>\n \n    );\n}\n\nexport default MainSection;\n","import React from 'react';\n\nimport './ButtonItem.css';\n\nfunction ButtonItem(props) {\n\n  return (\n    <button type=\"button\" className=\"btn btn-primary\" onClick={ props.handleClick } data-toggle=\"button\" aria-pressed=\"false\" autoComplete=\"off\">\n       <span className=\"button--text\">{ props.text }</span>\n    </button>\n  );\n}\n\nexport default ButtonItem;","import React from 'react';\n\nimport './TaskItem.css';\nimport ButtonItem from '../ButtonItem/ButtonItem';\n\nfunction TaskItem(props) {\n\n  const handleDeleteClick = () => {\n     props.deleteTask(props.id);\n  }\n\n  const handleCompleteClick = () => {\n    props.completeTask(props.id);\n  }\n\n  return (\n    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n\n      <span className=\"task__text\">\n        \n        {!props.completed && <span className=\"task__date\">{props.due_date}h</span>} \n        {props.completed && <span className=\"task__completed\">{props.due_date}</span>}\n        { props.text }\n        \n      </span>\n      <div className=\"input-group-append\">\n      <span className=\"task__button--complete\">\n        { (!props.completed && <ButtonItem text=\"Complete\" handleClick={handleCompleteClick}/>) }\n      </span>\n      <span className=\"task__button-delete\">\n        { <ButtonItem text=\"Delete\" handleClick={handleDeleteClick}/> }\n      </span>\n      </div>\n    </li>\n  );\n}\n\nexport default TaskItem;\n\n","import React, { Fragment, useState } from 'react';\n\nimport './InputField.css';\n\nfunction InputField(props) {\n\n    const [text, setText] = useState();\n    const [due_date, setDueDate] = useState();\n\n    const handleTextChange = (event) => {\n        setText(event.target.value);\n    \n    }\n\n    const handleDateChange = (event) => {\n        \n        setDueDate(event.target.value);\n    \n    }\n\n    const handleAaddTaskClick = () => {\n        props.addTask(text, due_date);\n    }\n\n    const handleClearTaskClick = () => {\n        setText(\"\");\n        setDueDate(\"\");\n    }\n\n    return (\n        <Fragment>\n            <div className=\"input-group\">\n                <input\n                    type=\"text\"\n                    className=\"form-control task-description\"\n                    placeholder=\"Task Description\"\n                    aria-label=\"Task Description\"\n                    aria-describedby=\"basic-addon2\"\n                    onChange={handleTextChange}\n                    value={text} />\n                <input\n                    type=\"date\"\n                    className=\"form-control task-date\"\n                    onChange={handleDateChange}\n                    value={due_date} />\n                <div className=\"input-group-append\">\n                    <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={handleAaddTaskClick}>Add</button>\n                    <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={handleClearTaskClick}>Clear</button>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default InputField;\n","import React from 'react';\n\nimport './RemainingTasks.css';\n\nfunction RemainingTasks(props) {\nreturn <h2 className=\"remaining-tasks__status\">{ props.text } { props.count }</h2>;\n  \n}\n\nexport default RemainingTasks;\n\n","import React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\n\nimport NavBar from './NavBar/NavBar';\nimport Footer from './Footer/Footer';\nimport TaskItem from './TaskItem/TaskItem';\nimport InputField from './InputField/InputField';\nimport RemainingTasks from \"./RemainingTasks/RemainingTasks\";\n\nimport \"./App.css\";\n\n\nfunction App() {\n\n  const [tasks, setTasks] = useState();\n\n  useEffect(() => {\n\n   \n    //GET\n    axios\n      .get('https://qrxi205yi8.execute-api.eu-west-1.amazonaws.com/dev/tasks')\n      .then(\n        \n        response => {\n          console.log(response.data.tasks);\n          console.log(\"I am here\");\n\n          setTasks(response.data.tasks);\n        }\n      )\n      .catch(\n        (error) => {\n          console.log('Error fetching data', error)\n        }\n      )\n  }, []);\n\n  const activeTasks = tasks && tasks.filter(task => !task.completed);\n\n  const completedTasks = tasks && tasks.filter(task => task.completed);\n\n  const timeDifference = (currentDate, due_date) => {\n\n    let taskTimeFrame = due_date - currentDate;\n\n    return Math.ceil(taskTimeFrame / (1000 * 60 * 60));\n  };\n\n  \n  const deleteTask = (id) => {\n    axios\n      .delete(`https://qrxi205yi8.execute-api.eu-west-1.amazonaws.com/dev/tasks/${id}`)\n      .then(response => {\n          const updatedTaskList = tasks.filter(task => task.task_id !== id);\n          setTasks(updatedTaskList);\n        })\n      .catch((error) => {\n        console.log('Error adding a task', error)\n      })\n  }\n  \n  //PUT - Update task state\n  const completeTask = (id) => {\n    const updateTask = tasks.find(task => task.task_id === id);\n    updateTask.completed = 1;\n    \n    axios\n      .put(`https://qrxi205yi8.execute-api.eu-west-1.amazonaws.com/dev/tasks/${id}`, updateTask)\n      .then(response => {\n        const updatedTaskList = tasks.map(task => task.task_id === id ? updateTask : task)\n        setTasks(updatedTaskList);\n        })\n      .catch(error => {\n        console.log(\"Error fetching data\", error);\n      })\n  }\n\n  //POST - Create new task\n  const addTask = (text, due_date) => {\n    const newTask = {\n      \"description\": text,\n      \"due_date\": due_date,\n      \"completed\": 0,\n      \"user_id\": 1\n    }\n\n    axios\n      .post('https://qrxi205yi8.execute-api.eu-west-1.amazonaws.com/dev/tasks', newTask)\n      .then(\n        (response) => {\n          newTask.task_id = response.data.task[0].task_id;\n          const updatedTasks = [...tasks, newTask]\n          setTasks(updatedTasks);\n        })\n      .catch((error) => {\n        console.log(\"Error adding a task\", error);\n      });\n}\n\nconst clearInputFields = (text, due_date) => {\n  text = \"\";\n  due_date = \"\";\n}\n\n\n  return (\n\n    <div className=\"App\" id=\"app\">\n      <NavBar />\n      <div className=\"container-fluid\">\n        <div className=\"jumbotron\">\n          <h1 className=\"display-4\">Add New Task</h1>\n          <hr />\n          <InputField addTask={addTask} clearInputFields={clearInputFields} />\n\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-12 col-lg-12 col-sm-12\">\n            {tasks && (\n              <Fragment>\n                <RemainingTasks text=\"Active: \" count={activeTasks.length} />\n\n                <ul className=\"list-group\">\n                  {activeTasks.map(task =>\n                    <TaskItem\n                      completeTask={completeTask}\n                      deleteTask={deleteTask}\n                      id={task.task_id}\n                      key={task.task_id}\n                      text={task.description}\n                      due_date={timeDifference(Date.now(), new Date(task.due_date))} />\n                  )}\n                </ul>\n\n                <br />\n\n                <ul className=\"list-group\">\n                  <RemainingTasks text=\"Completed: \" count={completedTasks.length} />\n                  {completedTasks.map(task =>\n                    <TaskItem\n                      deleteTask={deleteTask}\n                      id={task.task_id}\n                      key={task.task_id}\n                      text={task.description}\n                      due_date={task.due_date}\n                      completed={task.completed} \n                      />\n                  )}\n                </ul>\n              </Fragment>\n            )}\n          </div>\n        </div>\n        <hr />\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}